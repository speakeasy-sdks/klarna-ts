/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProductIdentifiers } from "./productidentifiers";
import { Subscription } from "./subscription";
import { Expose, Type } from "class-transformer";

export class OrderLine extends SpeakeasyBase {
  /**
   * URL to an image that can be later embedded in communications between Klarna and the customer. (max 1024 characters).
   *
   * @remarks
   *  A minimum of 250x250 px resolution is recommended for the image to look good in the Klarna app, and below 50x50 px won't even show. We recommend using a good sized image (650x650 px or more), however the file size must not exceed 12MB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl?: string;

  /**
   * Used for storing merchant's internal order number or other reference. Pass through field. (max 1024 characters)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchant_data" })
  merchantData?: string;

  /**
   * Descriptive name of the order line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "product_identifiers" })
  @Type(() => ProductIdentifiers)
  productIdentifiers?: ProductIdentifiers;

  /**
   * URL to the product in the merchant’s webshop that can be later used in communications between Klarna and the customer. (max 1024 characters)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "product_url" })
  productUrl?: string;

  /**
   * Quantity of the order line item. Must be a non-negative number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;

  /**
   * Unit used to describe the quantity, e.g. kg, pcs, etc. If defined the value has to be 1-8 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity_unit" })
  quantityUnit?: string;

  /**
   * Client facing article number, SKU or similar. Max length is 256 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscription" })
  @Type(() => Subscription)
  subscription?: Subscription;

  /**
   * Tax rate of the order line. Non-negative value. The percentage value is represented with two implicit decimals. I.e 1900 = 19%.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_rate" })
  taxRate?: number;

  /**
   * Total amount of the order line. Must be defined as minor units. Includes tax and discount. Eg: 2500=25 euros
   *
   * @remarks
   * Value = (quantity x unit_price) - total_discount_amount.
   * (max value: 100000000)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_amount" })
  totalAmount: number;

  /**
   * Non-negative minor units. Includes tax. Eg: 500=5 euros
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_discount_amount" })
  totalDiscountAmount?: number;

  /**
   * Total tax amount of the order line. Must be within ±1 of total_amount - total_amount 10000 / (10000 + tax_rate). Negative when type is discount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax_amount" })
  totalTaxAmount?: number;

  /**
   * Type of the order line item. The possible values are:
   *
   * @remarks
   *
   * physical
   * discount
   * shipping_fee
   * sales_tax
   * digital
   * gift_card
   * store_credit
   * surcharge
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Price for a single unit of the order line. Must be defined as minor units. Includes tax, excludes discount. (max value: 100000000)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit_price" })
  unitPrice: number;
}
